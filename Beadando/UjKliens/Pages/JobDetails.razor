@page "/Job/{id:int?}"
@using Beadando.Contract;
@using Beadando.Contract;
@using UjKliens.Services;
@inject IJobServices JobService;
@inject NavigationManager NavigationManager;

@if (Job is null)
{
        <p>Loading...</p>
}
else
{
        <h3>Job Details</h3>
        <div>
        <label class="form-label"><b>Client Name:</b> @Job.ClientFirstName @Job.ClientLastName</label>
        </div>
        <div>
        <label class="form-label"><b>Car Type:</b> @Job.CarType</label>
        </div>
        <div>
        <label class="form-label"><b>License Plate:</b> @Job.LicensePlateNumber</label>
        </div>
        <div>
        <label class="form-label"><b>Year of Manufacturing:</b> @Job.ManufacturingYear</label>
        </div>
        <div>
        <label class="form-label"><b>Car Type:</b> @Job.CarType</label>
        </div>
        <div>
        <label class="form-label"><b>Job Description:</b> @Job.Description</label>
        </div>
        <div>
        <label class="form-label"><b>Current Job Status:</b> @JobStatus</label>
        </div>

            <EditForm Model="@Job" OnValidSubmit="@HandleValidSubmitAsync">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <InputSelect @bind-Value="@Job.Status" class="form-select">
                        <option value="0"> Accepted </option>
                        <option value="1"> In Progress </option>
                        <option value="2"> Completed </option>
                    </InputSelect>
                </div>

                <button type="submit" class="btn btn-primary form-control mb-3">Save Changes</button>
            </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Job? Job { get; set; }

    private JobStatus? JobStatus;

    protected override async Task OnInitializedAsync()
    {
        Job = await JobService.GetJobsByIdAsync(Id);
        JobStatus = Job.Status;
    }

    private async Task HandleValidSubmitAsync()
    {
        await JobService.UpdateJobStatusAsync(Id, Job.Status!);
        NavigationManager.NavigateTo("/");
    }
}