@page "/Job/{id:int?}"
@using Beadando.Contract;
@using IrodaiKliensApp.Services
@inject IJobsService JobService
@inject NavigationManager NavigationManager

@if (Job is null)
{
        <p>Loading...</p>
}
else
{
        <h3>@Job.ClientFirstName's details</h3>


            <EditForm Model="@Job" OnValidSubmit="@HandleValidSubmitAsync">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label class="form-label">Client first name</label>
                    <InputText @bind-Value="@Job.ClientFirstName" class="form-control" aria-describedby="firstNameHelp"/>
                    <ValidationMessage For="@(() => Job.ClientFirstName)" />
                </div>
                    <div class="mb-3">
                    <label class="form-label">Client last name</label>
                    <InputText @bind-Value="@Job.ClientLastName" class="form-control"/>
                    <ValidationMessage For="@(() => Job.ClientLastName)" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Car Type</label>
                    <InputText @bind-Value="@Job.CarType" class="form-control"/>
                        <ValidationMessage For="@(() => Job.CarType)" />
                </div>
                <div class="mb-3">
                    <label class="form-label">LicensePlateNumber</label>
                    <InputText @bind-Value="@Job.LicensePlateNumber" class="form-control" />
                        <ValidationMessage For="@(() => Job.LicensePlateNumber)" />
                </div>
                <div class="mb-3">
                    <label class="form-label">ManufacturingYear</label>
                    <InputNumber @bind-Value="@Job.ManufacturingYear" class="form-control" />
                        <ValidationMessage For="@(() => Job.ManufacturingYear)" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Description</label>
                    <InputText @bind-Value="@Job.Description" class="form-control" />
                        <ValidationMessage For="@(() => Job.Description)" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Category</label>
                    <InputSelect @bind-Value="@Job.Category" class="form-control">
                        <option value="0"> Body </option>
                        <option value="1"> Engine </option>
                        <option value="2"> Undercarriage </option>
                        <option value="3"> Brakes </option>
                    </InputSelect>
                </div>

                <button type="submit" class="btn btn-primary form-control mb-3">Save Changes</button>
            </EditForm>

        <button @onclick="@HandleDeleteAsync" class="btn btn-danger form-control">Delete</button>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Job? Job { get; set; }
     
    protected override async Task OnInitializedAsync()
    {
        Job = await JobService.GetJobsByIdAsync(Id);
    }

    private async Task HandleValidSubmitAsync()
    {
        await JobService.UpdatePersonAsync(Id, Job!);
        NavigationManager.NavigateTo("/");
    }

    private async Task HandleDeleteAsync()
    {
        await JobService.DeletePersonAsync(Id);
        NavigationManager.NavigateTo("/");
    }
}